{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "77bb3bfd",
   "metadata": {},
   "outputs": [],
   "source": [
    "from textblob import TextBlob\n",
    "import requests\n",
    "import json\n",
    "\n",
    "# Function to extract YouTube comments using YouTube Data API v3\n",
    "def extract_comments(video_id, api_key):\n",
    "    url = f\"https://www.googleapis.com/youtube/v3/commentThreads?key={api_key}&textFormat=plainText&part=snippet&videoId={video_id}&maxResults=100\"\n",
    "    response = requests.get(url)\n",
    "    data = json.loads(response.text)\n",
    "    comments = []\n",
    "    for item in data[\"items\"]:\n",
    "        comment = item[\"snippet\"][\"topLevelComment\"][\"snippet\"][\"textDisplay\"]\n",
    "        comments.append(comment)\n",
    "    return comments\n",
    "\n",
    "# Function to perform sentiment analysis using TextBlob\n",
    "def analyze_sentiment(text):\n",
    "    blob = TextBlob(text)\n",
    "    sentiment_score = blob.sentiment.polarity\n",
    "    if sentiment_score > 0:\n",
    "        sentiment = \"positive\"\n",
    "    elif sentiment_score < 0:\n",
    "        sentiment = \"negative\"\n",
    "    else:\n",
    "        sentiment = \"neutral\"\n",
    "    return sentiment\n",
    "\n",
    "# YouTube video ID and API key\n",
    "video_id = \"your_video_id\"\n",
    "api_key = \"your_api_key\"\n",
    "\n",
    "# Extract comments from YouTube video\n",
    "comments = extract_comments(video_id, api_key)\n",
    "\n",
    "# Perform sentiment analysis on comments\n",
    "for comment in comments:\n",
    "    sentiment = analyze_sentiment(comment)\n",
    "    print(f\"Comment: {comment}\")\n",
    "    print(f\"Sentiment: {sentiment}\")\n",
    "    print(\"-\" * 50)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
